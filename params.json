{"name":"Androidforbeginners","tagline":"","body":"# Welcome to the workshop Android for beginners\r\n### What do you need for this workshop ?\r\n* Android Studio: http://developer.android.com/sdk/index.html \r\n  * It is possible that Android studio starts complaining about java jdk, install this jdk from the link Android studio provides. After the installation of java jdk, you have to restart the Android Studio installation.\r\n* Genymotion (with virtualbox): https://www.genymotion.com/#!/store (free version: Registration needed).\r\n * Adding an emulator: Start genymotion -> Choose: Add -> Choose a device (Samsung galaxy s3 for example) -> Click 2 times next and the emulator will be created.\r\n * Starting an Emulator: Start genymotion -> Select the emulator and click run\r\n\r\n### Structure of the workshop\r\n* 40 minutes explanation about the structure of an Android project:\r\n * Explanation about all files and folders\r\n * Layout\r\n * Java code to interact with the layout\r\n* 20-Minute break\r\n* 1 hour making a simple game\r\n\r\n### Assignments\r\n#### Part 1 \r\n* Change the logo of the app. (Zoek op internet een png)\r\n * Add an image to the drawable or mipmap folder\r\n * Set this image as icon in the Manifest\r\n* Make a GameActivity that loads the layout activity_game.\r\n * Make a new class and let it extend AppCompatActivity\r\n  * Example from MainActivity:`public class MainActivity extends AppCompatActivity`\r\n* Add a button so you can go from MainActivity to GameActivity.\t\r\n * Declare the button in the layout: activity_main.xml\r\n * Add an onClickListener in MainActivity.java\r\n\r\n#### Part 2\r\n* Create a new instance of the game class\r\n * `Game game = new Game(this);`\r\n* Add all pointsButtons to the game\r\n * The id's of the pointsButtons are buttonPoints0..9\r\n * Use `findViewById()` to get the reference to the 10 buttons\r\n * Use the methode `addPointsButton(Button button)`\r\n* Set the AnswerButtons to the game\r\n * Use `findViewById()` to get the reference to the 10 buttons\r\n * Use the methode `setAnswerButtons(Button button)`\r\n* Set the textview of the time to the game\r\n * Use the methode `setTimerTextView(TextView textView)`\r\n* Set the textview of the question to the game\r\n * Use the methode `setQuestionTextView(TextView textView)`\r\n* Make the buttons clickable\r\n * Use an onClickListeners\r\n * Use the methode `checkIfRightAnswered(String string)`\r\n * This string should be the text of the button\r\n  * Use the methode `button.getText().toString()`\r\n\r\n#### Part 3\r\n* Add a landscape layout for activity_game (buttons alongside each other instead of on top)\r\n * Open the design-mode of activity_game.xml\r\n * Click this button: ![Image of LandscapeButton](images/landscape.png)\r\n * Change the orientation of the right LineairLayout\r\n* Add a menu with different layout for portait and landscape modus\r\n * Create a new Menu resource file in the folder res/menu\r\n * Load the layout from the function `onCreateOptionsMenu`\r\n* When clicked on 1 of the menu-items, the game should restart.\r\n * Override the function `onOptionsItemSelected`\r\n * When clicked on the menu-item execute: `game.restart()`\r\n\r\n#### Part 4 (Difficult)\r\n* Set the text shown when the player wins or loses\r\n * Set the onWinListener\r\n   * Use the following code:\r\n```java\r\n            game.setOnWinListener(new onWinOrLoseInterface() {\r\n            @Override\r\n            public void onWin() {\r\n                //User wins\r\n            }\r\n\r\n            @Override\r\n            public void onLose() {\r\n                //User loses\r\n            }\r\n        });\r\n```\r\n * Use a Toast to show a winning or losing text\r\n* Make sure the game doesn't restart on turn\r\n * Add the param `android:configChanges=\"orientation|screenSize\"` to the GameActivity in the Manifest\r\n * Override the function `onConfigurationChanged`\r\n* Add a TextView in the layout that shows the level\r\n * Use the function `game.getLevel()`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}